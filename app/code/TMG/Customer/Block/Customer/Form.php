<?php

namespace TMG\Customer\Block\Customer;

use TMG\Customer\Helper\Customer as CustomerHelper;

class Form extends \Magento\Customer\Block\Form\Register
{
    /**
     * @var CustomerHelper
     */
    protected $customerHelper;
    
    public function __construct(
        \Magento\Framework\View\Element\Template\Context $context,
        \Magento\Directory\Helper\Data $directoryHelper,
        \Magento\Framework\Json\EncoderInterface $jsonEncoder,
        \Magento\Framework\App\Cache\Type\Config $configCacheType,
        \Magento\Directory\Model\ResourceModel\Region\CollectionFactory $regionCollectionFactory,
        \Magento\Directory\Model\ResourceModel\Country\CollectionFactory $countryCollectionFactory,
        \Magento\Framework\Module\Manager $moduleManager,
        \Magento\Customer\Model\Session $customerSession,
        \Magento\Customer\Model\Url $customerUrl,
        CustomerHelper $customerHelper,
        array $data = []
    ){
        parent::__construct($context, $directoryHelper, $jsonEncoder, $configCacheType, $regionCollectionFactory,
            $countryCollectionFactory, $moduleManager, $customerSession, $customerUrl, $data);
        $this->customerHelper = $customerHelper;
    }
    
    public function getFormData()
    {
        $formData = parent::getFormData(); // TODO: Change the autogenerated stub
//        if(!$formData->getData()) {
//            $customer = $this->getCustomerHelper()->getCurrentCustomer();
//            $formData->addData($customer->getData());
//            foreach ($this->getCustomerHelper()->getCustomCustomerAttributesConfig() as $key => $label) {
//                $formData->setData($key,$customer->getData($key));
//            }
//        }
        return $formData;
    }
    
    /**
     * @return CustomerHelper
     */
    public function getCustomerHelper()
    {
        return $this->customerHelper;
    }
    
}