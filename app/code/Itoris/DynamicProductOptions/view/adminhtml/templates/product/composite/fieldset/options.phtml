<?php
/**
 * ITORIS
 *
 * NOTICE OF LICENSE
 *
 * This source file is subject to the ITORIS's Magento Extensions License Agreement
 * which is available through the world-wide-web at this URL:
 * http://www.itoris.com/magento-extensions-license.html
 * If you did not receive a copy of the license and are unable to
 * obtain it through the world-wide-web, please send an email
 * to sales@itoris.com so we can send you a copy immediately.
 *
 * DISCLAIMER
 *
 * Do not edit or add to this file if you wish to upgrade the extensions to newer
 * versions in the future. If you wish to customize the extension for your
 * needs please refer to the license agreement or contact sales@itoris.com for more information.
 *
 * @category   ITORIS
 * @package    ITORIS_M2_DYNAMIC_PRODUCT_OPTIONS
 * @copyright  Copyright (c) 2016 ITORIS INC. (http://www.itoris.com)
 * @license    http://www.itoris.com/magento-extensions-license.html  Commercial License
 */
?>
<?php /** @var $block \Itoris\DynamicProductOptions\Block\Options\Config */ ?>
<?php if ($block->getStyles()): ?>
<style>
	<?php echo $block->getStyles() ?>
</style>
<?php endif; ?>
<?php $isTable = $block->getConfig()->getFormStyle() != 'list_div' ?>
<div id="itoris_dynamicproductoptions_add_to_cart_configure" style="display: none;">
	<button type="button" class="button">
		<span><span><?php echo $block->escapeHtml(__('Configure')) ?></span></span>
	</button>
</div>
<div id="itoris_dynamicproductoptions_popup_mask" style="display: none;"></div>
<div id="itoris_dynamicproductoptions_popup" style="display: none;">
	<div id="itoris_dynamicproductoptions_popup_close_icon"></div>
	<h2 class="popup-title"><?php echo $block->escapeHtml(sprintf(__('Configure %s'), $block->getProduct()->getName())) ?></h2>
	<div id="itoris_dynamicproductoptions">
		<?php $sectionConditions = []; ?>
		<?php foreach ($block->getSections() as $section): ?>
			<?php if ($block->getConfig()->getFormStyle() == 'table_sections') {$sectionConditions = $block->prepareSectionConditions($section, $sectionConditions);} ?>
			<div class="fieldset<?php if ($section->getTitle()): ?> fieldset-section<?php endif; ?> fieldset-section-<?php echo $section->getOrder() ?>">
				<?php if ($section->getTitle()): ?>
					<h2 class="legend"><?php echo $section->getTitle() ?></h2>
				<?php endif; ?>
				<?php if ($isTable): ?>
					<table class="form-list <?php echo 'option-fields-cols-' . $section->getCols() ?>">
						<?php for ($i = 1; $i <= $section->getRows(); $i++): ?>
							<tr class="fields">
								<?php for ($j = 1; $j <= $section->getCols(); $j++): ?>
									<?php $order = ($i - 1) * $section->getCols() + $j; ?>
									<?php foreach ($section->getFields() as $field): ?>
										<?php if ($field->getOrder() == $order): ?>
											<td>
												<div id="<?php if ($field->getOptionId()): ?>dynamic_option_id_<?php echo $field->getOptionId(); else: ?>itoris_dynamic_option_id_<?php echo $field->getItorisOptionId();endif;?>" class="field">
                                                    <?php if ($field->getTitle() && $block->isSystemOption($field)): ?>
														<label <?php if ($field->getIsRequire()):?>class="required"<?php endif; ?>><?php if ($field->getIsRequire()):?><em>*</em><?php endif; ?><?php echo $field->getTitle() ?></label><?php echo $block->getOptionPrice($field) ?>
													<?php endif; ?>
													<?php if (!$block->isSystemOption($field)): ?>
														<?php echo $block->getFieldHtml($field); ?>
													<?php endif; ?>
												</div>
											</td>
											<?php continue 2; endif; ?>
									<?php endforeach; ?>
									<td><div class="field empty" style="height: 1px;"></div></td>
								<?php endfor; ?>
							</tr>
						<?php endfor; ?>
					</table>
				<?php else: ?>
					<ul class="form-list <?php echo 'option-fields-cols-' . $section->getCols() ?>">
						<?php for ($i = 1; $i <= $section->getRows(); $i++): ?>
							<li class="fields">
								<?php for ($j = 1; $j <= $section->getCols(); $j++): ?>
									<?php $order = ($i - 1) * $section->getCols() + $j; ?>
									<?php foreach ($section->getFields() as $field): ?>
										<?php if ($field->getOrder() == $order): ?>
											<div id="<?php if ($field->getOptionId()): ?>dynamic_option_id_<?php echo $field->getOptionId(); else: ?>itoris_dynamic_option_id_<?php echo $field->getItorisOptionId();endif;?>" class="field">
												<?php if ($field->getTitle() && $block->isSystemOption($field)): ?>
													<label <?php if ($field->getIsRequire()):?>class="required"<?php endif; ?>><?php if ($field->getIsRequire()):?><em>*</em><?php endif; ?><?php echo $field->getTitle() ?></label><?php echo $block->getOptionPrice($field) ?>
												<?php endif; ?>
												<?php if (!$block->isSystemOption($field)): ?>
													<?php echo $block->getFieldHtml($field); ?>
												<?php endif; ?>
											</div>
											<?php continue 2; endif; ?>
									<?php endforeach; ?>
									<div class="field empty" style="height: 1px;"></div>
								<?php endfor; ?>
							</li>
						<?php endfor; ?>
					</ul>
				<?php endif; ?>
			</div>
		<?php endforeach; ?>
	</div>
	<div class="product-options-bottom">
		<button id="itoris_dynamicproductoptions_popup_button_cancel" type="button" class="button"><span><span><?php echo $block->escapeHtml(__('Cancel')) ?></span></span></button>
		<div class="add-to-box">
			<span id="itoris_dynamicproductoptions_popup_price"></span>
			<button id="itoris_dynamicproductoptions_popup_button_apply" type="button" class="button"><span><span><?php echo $block->escapeHtml(__('Apply')) ?></span></span></button>
			<span class="or"><?php echo $block->escapeHtml(__('OR')) ?></span>
			<div class="add-to-cart">
				<label for="qty"><?php echo $block->escapeHtml(__('Qty:')) ?></label>
				<input type="text" name="qty" id="itoris_dynamicoptions_qty" maxlength="12" value="" title="<?php echo $block->escapeHtml(__('Qty')) ?>" class="input-text qty" />
				<?php $buttonTitle = $block->isEditAction() ? $block->escapeHtml(__('Update Cart')) : $block->escapeHtml(__('Add to Cart')) ?>
				<button type="button" title="<?php echo $buttonTitle ?>" id="itoris_dynamicoptions_add_to_cart" class="button btn-cart"><span><span><?php echo $buttonTitle ?></span></span></button>
			</div>
		</div>
	</div>
</div>
<div id="itoris_dynamicproductoptions_configuration" style="display: none;">
	<ul></ul>
	<button id="itoris_dynamicproductoptions_button_edit" type="button" class="button"><span><span><?php echo $block->escapeHtml(__('Edit')) ?></span></span></button>
</div>
<script type="text/javascript">
    require(['itoris_options', 'prototype'], function(Itoris) {
        window.optionsPrice = new Product.OptionsPrice(<?php echo $block->getLayout()->createBlock('Magento\Catalog\Block\Product\View')->setProduct($block->getProduct())->getJsonConfig() ?>);
        compositeDPOHelper();
        Product.Options = Class.create();
        Product.Options.prototype = {
            initialize: function (config) {
                this.config = config;
                this.reloadPrice();
                document.observe("dom:loaded", this.reloadPrice.bind(this));
            },
            reloadPrice: function () {
                var config = this.config;
                var skipIds = [];
                $$('body .product-custom-option').each(function (element) {
                    var optionId = 0;
                    element.name.sub(/[0-9]+/, function (match) {
                        optionId = parseInt(match[0], 10);
                    });
                    if (config[optionId]) {
                        var configOptions = config[optionId];
                        var curConfig = {price: 0};
                        if (element.type == 'checkbox' || element.type == 'radio') {
                            if (element.checked) {
                                if (typeof configOptions[element.getValue()] != 'undefined') {
                                    curConfig = configOptions[element.getValue()];
                                }
                            }
                        } else if (element.hasClassName('datetime-picker') && !skipIds.include(optionId)) {
                            dateSelected = true;
                            $$('.product-custom-option[id^="options_' + optionId + '"]').each(function (dt) {
                                if (dt.getValue() == '') {
                                    dateSelected = false;
                                }
                            });
                            if (dateSelected) {
                                curConfig = configOptions;
                                skipIds[optionId] = optionId;
                            }
                        } else if (element.type == 'select-one' || element.type == 'select-multiple') {
                            if ('options' in element) {
                                $A(element.options).each(function (selectOption) {
                                    if ('selected' in selectOption && selectOption.selected) {
                                        if (typeof(configOptions[selectOption.value]) != 'undefined') {
                                            curConfig = configOptions[selectOption.value];
                                        }
                                    }
                                });
                            }
                        } else {
                            if (element.getValue().strip() != '') {
                                curConfig = configOptions;
                            }
                        }
                        if (element.type == 'select-multiple' && ('options' in element)) {
                            $A(element.options).each(function (selectOption) {
                                if (('selected' in selectOption) && typeof(configOptions[selectOption.value]) != 'undefined') {
                                    if (selectOption.selected) {
                                        curConfig = configOptions[selectOption.value];
                                    } else {
                                        curConfig = {price: 0};
                                    }
                                    optionsPrice.addCustomPrices(optionId + '-' + selectOption.value, curConfig);
                                    optionsPrice.reload();
                                }
                            });
                        } else {
                            optionsPrice.addCustomPrices(element.id || optionId, curConfig);
                            optionsPrice.reload();
                        }
                    }
                });
            }
        }

        window.opConfig = new Product.Options(<?php echo $block->setProduct($block->getProduct())->getJsonConfig()  ?>);

        if (!$('product-options-wrapper').hasClassName('dpo_initialized')) {
            $('product-options-wrapper').addClassName('dpo_initialized');
            dpoobj = dynamicOptions<?php echo $block->getProductId() ?> = new DynamicProductOptions(<?php echo $block->getJsObjectConfig(['section_conditions' => $sectionConditions]) ?>, <?php echo $block->getAllFieldsJson() ?>);
            var withQtys = $$('#itoris_dynamicproductoptions select, #itoris_dynamicproductoptions input');
            withQtys.each(function (select) {
                dpoobj.updateQtyElement(select.id);
                Event.observe(select, 'change', function () {
                    withQtys.each(function (obj) {
                        dpoobj.updateQtyElement(obj.id);
                    });
                });
                Event.observe(select, 'click', function () {
                    withQtys.each(function (obj) {
                        dpoobj.updateQtyElement(obj.id);
                    });
                });
            });
            dpoobj.presetOptionsQty();
        }
    });

</script>

